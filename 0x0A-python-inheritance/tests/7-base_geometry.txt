The ``7-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

Importing class from the module:
	 >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Checking for module documentation:
         >>> module_doc = __import__("7-base_geometry").__doc__
         >>> len(module_doc) > 0
         True

Checking for class documentation:
         >>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__
         >>> len(class_doc) > 0
         True

Checking for method documentation:
	 >>> method_1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	 >>> len(method_1) > 0
	 True
	 >>> method_2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
         >>> len(method_2) > 0
         True

Trying to print the area
    	 >>> bg = BaseGeometry()
    	 >>> bg.area()
    	 Traceback (most recent call last):
    	 ...
         Exception: area() is not implemented


Trying to pass a non-integer argument
         >>> bg = BaseGeometry()
         >>> bg.integer_validator("name", "5")
         Traceback (most recent call last):
    	 ...
         TypeError: name must be an integer


Checking integer validator for non-integer types:
	 >>> bg = BaseGeometry()
	 >>> bg.integer_validator("bool", True)
	 Traceback (most recent call last):
         ...
         TypeError: bool must be an integer
	 >>> bg.integer_validator("float", 1.536)
         Traceback (most recent call last):
         ...
         TypeError: float must be an integer
	 >>> bg.integer_validator("string", "name")
         Traceback (most recent call last):
         ...
         TypeError: string must be an integer
	 >>> bg.integer_validator("tuple", (22, 18))
         Traceback (most recent call last):
         ...
         TypeError: tuple must be an integer
	 >>> bg.integer_validator("list", [1, 2, 3])
	 Traceback (most recent call last):
         ...
         TypeError: list must be an integer
	 >>> bg.integer_validator("dict", {"key": "value"})
         Traceback (most recent call last):
         ...
         TypeError: dict must be an integer
	 >>> bg.integer_validator("set", {"give", "back"})
         Traceback (most recent call last):
         ...
         TypeError: set must be an integer

Trying to pass a negative value
    	 >>> bg = BaseGeometry()
    	 >>> bg.integer_validator("name", -5)
    	 Traceback (most recent call last):
    	 ...
    	 ValueError: name must be greater than 0

Trying to pass a zero value
    	 >>> bg = BaseGeometry()
   	 >>> bg.integer_validator("name", 0)
    	 Traceback (most recent call last):
    	 ...
         ValueError: name must be greater than 0

Passing a positive value
    	 >>> bg = BaseGeometry()
    	 >>> bg.integer_validator("name", 5)

Passing one argument to integer_validator
    	 >>> bg = BaseGeometry()
    	 >>> bg.integer_validator("name")
    	 Traceback (most recent call last):
    	 ...
    	 TypeError: integer_validator() missing 1 required positional argument: 'value'

Integer_validator with no arguments
    	 >>> bg = BaseGeometry()
    	 >>> bg.integer_validator()
         Traceback (most recent call last):
    	 ...
         TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Passing three arguments to integer_validator
    	 >>> bg = BaseGeometry()
    	 >>> bg.integer_validator("name", 1, 2)
    	 Traceback (most recent call last):
    	 ...
         TypeError: integer_validator() takes 3 positional arguments but 4 were given

Passing one argument to area method
         >>> bg = BaseGeometry()
         >>> bg.area(5)
         Traceback (most recent call last):
    	 ...
         TypeError: area() takes 1 positional argument but 2 were given

Passing two arguments to area method
         >>> bg = BaseGeometry()
         >>> bg.area(5, 5)
         Traceback (most recent call last):
    	 ...
         TypeError: area() takes 1 positional argument but 3 were given

Passing None to method
    	 >>> bg = BaseGeometry()
    	 >>> bg.integer_validator("age", None)
    	 Traceback (most recent call last):
         ...
    	 TypeError: age must be an integer
